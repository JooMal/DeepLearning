# -*- coding: utf-8 -*-
"""Classification_for_GAN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1H0OLMX4Rm7Ysyjr43X1-N5BP1_ROcopc
"""

import cv2
import numpy as np

img1 = np.array([[1,1,1,1],[1,1,1,1],[0,0,0,0],[0,0,0,0]])
img2 = np.array([[1,1,0,0],[1,1,0,0],[1,1,0,0],[1,1,0,0]])
mask = np.array([[0,0,0,0],[0,1,1,0],[0,1,1,0],[0,0,0,0]])

cv2.bitwise_and(img1, img2)

cv2.bitwise_and(img1,img2, mask=mask)

mat0 = np.uint8([[130, 140], [150, 160]])
mat1 = np.uint8([[100, 100], [150, 150]])
mat2 = np.uint8([[150, 150], [150, 150]])

mat0_add_mat1 = mat2-mat0
print(mat0_add_mat1)

mat0_add_mat1 = cv2.subtract(mat2,mat0)
print(mat0_add_mat1)

from keras import layers, models

x = layers.Input(2)
h1 = layers.Dense(3, activation='relu')(x)
h = layers.Conv2D(filters=4, kernel_size=(3,3))(h1)

y = layers.MaxPooling2D(pool_size=(2,2))(h)

model = models.Model(x,y)
model.summary()

from keras import layers, models

model = models.Sequential()
model.add(layers.Input(shape=(None,2)))
model.add(layers.Dense(3,activation='relu'))

model.summary()

