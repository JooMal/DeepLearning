# -*- coding: utf-8 -*-
"""Flickr.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lodh7CFAMwJIWq31iB8YuAhEWlbJFwjQ
"""

pip install flickrapi

from flickrapi import FlickrAPI

FLICKER_KEY = '505e8c2b05e8b5aa51766a43fc4bc7a7'
FLICKER_SECRET = '46b3ef2f43b04ac6'

flickr = FlickrAPI(FLICKER_KEY, FLICKER_SECRET, format='parsed-json')
extras='url_o'

cats = flickr.photos.search(text='kitten', per_page=5, extras=extras)
photos = cats['photos']

from pprint import pprint
pprint(photos)

import numpy as np
import urllib
import cv2

def url_to_image(url):
  resp = urllib.urlopen(url)
  image = np.asarray(bytearray(resp.read()), dtype='uint8')
  image=cv2.imdecode(image, cv2.IMREAD_COLOR)
  
  return image

from google.colab.patches import cv2_imshow

urls = ['https://live.staticflickr.com/65535/48239557012_d3e1bc8441_o.jpg']

for url in urls :
  print 'donwloading %s'%(url)
  image = url_to_image(url)
  cv2_imshow(image)

from google.colab.patches import cv2_imshow

index=0
image_original_url = photos['photo'][index]['url_o']
image_temp = url_to_image(image_original_url)
cv2_imshow(image_temp)

print image_temp.shape

def image_resize(image, x, y):
  return cv2.resize(image, (x,y))

resized = image_resize(image_temp, 224, 224)

print resized.shape
cv2_imshow(resized)

resized = np.expand_dims(resized, axis=0)

print resized.shape

cv2_imshow(resized[0])

def image_array(num_images):
  images=[]
  for i in range(num_images):
    image_original_url = photos['photo'][i]['url_o']
    image = url_to_image(image_original_url)
    resized_image = cv2.resize(image, (224,224))
    cv2_imshow(resized_image)
    
    images.append(resized_image)
    
    return np.asarray(images)

images = image_array(1)

from keras.applications.vgg16 import VGG16
model = VGG16()

yhat = model.predict(images)

from keras.applications.vgg16 import decode_predictions
label = decode_predictions(yhat)
label = label[0][0]
print('%s (%.2f%%)'%(label[1], label[2]*100))

